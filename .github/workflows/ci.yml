name: CI
on:
  push:
    branches: [ master ]
  pull_request:
  schedule:
    - cron:  '0 0 * * *'

jobs:

  pythonforensicstorelib:
    name: Python forensicstore
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: [3.6, 3.7, 3.8]
    steps:

    # Setup
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - run: pip install pylint pytest pytest-cov

    - run: pip install .

    # Lint and test pyforensicstore
    - run: pylint pyjsonlite pyforensicstore --rcfile test/python/.pylintrc
    - run: pytest -v --cov-report=xml --cov=forensicstore --cov=jsonlite test/python
      shell: bash

    - name: Upload coverage
      env:
        CI: "true"
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: bash <(curl -s https://codecov.io/bash) -f coverage.xml
      if: matrix.os == 'windows-latest' && matrix.python-version == 3.8
      shell: bash

    # Test pyforensicstore command (TODO: fails on windows)
    - name: Set system path
      run: echo "##[add-path]$PWD"
      shell: bash
      if: matrix.os != 'windows-latest'
    - name: Symlink forensicstore
      run: |
        ln -fs `which pyforensicstore` forensicstore
        chmod +x forensicstore
      shell: bash
      if: matrix.os != 'windows-latest'
    - name: Setup node
      uses: actions/setup-node@v1
      with: {node-version: '10.x'}
      if: matrix.os != 'windows-latest'
    - name: Install bats
      run: npm install -g bats
      if: matrix.os != 'windows-latest'
    - name: Bats python test
      run: bats test/bats/forensicstore.bats test/bats/forensicstore_validate.bats
      shell: bash
      if: matrix.os != 'windows-latest'
